/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.handson.ordercreationavro.dto;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderCreatedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6647708520241041865L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderCreatedEvent\",\"namespace\":\"com.handson.ordercreationavro.dto\",\"fields\":[{\"name\":\"orderNo\",\"type\":\"string\"},{\"name\":\"enterpriseCode\",\"type\":\"string\"},{\"name\":\"totalAmount\",\"type\":\"double\"},{\"name\":\"timestamp\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderCreatedEvent> ENCODER =
      new BinaryMessageEncoder<OrderCreatedEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderCreatedEvent> DECODER =
      new BinaryMessageDecoder<OrderCreatedEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<OrderCreatedEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<OrderCreatedEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderCreatedEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this OrderCreatedEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a OrderCreatedEvent from a ByteBuffer. */
  public static OrderCreatedEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence orderNo;
  @Deprecated public java.lang.CharSequence enterpriseCode;
  @Deprecated public double totalAmount;
  @Deprecated public long timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderCreatedEvent() {}

  /**
   * All-args constructor.
   * @param orderNo The new value for orderNo
   * @param enterpriseCode The new value for enterpriseCode
   * @param totalAmount The new value for totalAmount
   * @param timestamp The new value for timestamp
   */
  public OrderCreatedEvent(java.lang.CharSequence orderNo, java.lang.CharSequence enterpriseCode, java.lang.Double totalAmount, java.lang.Long timestamp) {
    this.orderNo = orderNo;
    this.enterpriseCode = enterpriseCode;
    this.totalAmount = totalAmount;
    this.timestamp = timestamp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return orderNo;
    case 1: return enterpriseCode;
    case 2: return totalAmount;
    case 3: return timestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: orderNo = (java.lang.CharSequence)value$; break;
    case 1: enterpriseCode = (java.lang.CharSequence)value$; break;
    case 2: totalAmount = (java.lang.Double)value$; break;
    case 3: timestamp = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'orderNo' field.
   * @return The value of the 'orderNo' field.
   */
  public java.lang.CharSequence getOrderNo() {
    return orderNo;
  }

  /**
   * Sets the value of the 'orderNo' field.
   * @param value the value to set.
   */
  public void setOrderNo(java.lang.CharSequence value) {
    this.orderNo = value;
  }

  /**
   * Gets the value of the 'enterpriseCode' field.
   * @return The value of the 'enterpriseCode' field.
   */
  public java.lang.CharSequence getEnterpriseCode() {
    return enterpriseCode;
  }

  /**
   * Sets the value of the 'enterpriseCode' field.
   * @param value the value to set.
   */
  public void setEnterpriseCode(java.lang.CharSequence value) {
    this.enterpriseCode = value;
  }

  /**
   * Gets the value of the 'totalAmount' field.
   * @return The value of the 'totalAmount' field.
   */
  public java.lang.Double getTotalAmount() {
    return totalAmount;
  }

  /**
   * Sets the value of the 'totalAmount' field.
   * @param value the value to set.
   */
  public void setTotalAmount(java.lang.Double value) {
    this.totalAmount = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Creates a new OrderCreatedEvent RecordBuilder.
   * @return A new OrderCreatedEvent RecordBuilder
   */
  public static com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder newBuilder() {
    return new com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder();
  }

  /**
   * Creates a new OrderCreatedEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderCreatedEvent RecordBuilder
   */
  public static com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder newBuilder(com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder other) {
    return new com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder(other);
  }

  /**
   * Creates a new OrderCreatedEvent RecordBuilder by copying an existing OrderCreatedEvent instance.
   * @param other The existing instance to copy.
   * @return A new OrderCreatedEvent RecordBuilder
   */
  public static com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder newBuilder(com.handson.ordercreationavro.dto.OrderCreatedEvent other) {
    return new com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder(other);
  }

  /**
   * RecordBuilder for OrderCreatedEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderCreatedEvent>
    implements org.apache.avro.data.RecordBuilder<OrderCreatedEvent> {

    private java.lang.CharSequence orderNo;
    private java.lang.CharSequence enterpriseCode;
    private double totalAmount;
    private long timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.orderNo)) {
        this.orderNo = data().deepCopy(fields()[0].schema(), other.orderNo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.enterpriseCode)) {
        this.enterpriseCode = data().deepCopy(fields()[1].schema(), other.enterpriseCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.totalAmount)) {
        this.totalAmount = data().deepCopy(fields()[2].schema(), other.totalAmount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OrderCreatedEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.handson.ordercreationavro.dto.OrderCreatedEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.orderNo)) {
        this.orderNo = data().deepCopy(fields()[0].schema(), other.orderNo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.enterpriseCode)) {
        this.enterpriseCode = data().deepCopy(fields()[1].schema(), other.enterpriseCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.totalAmount)) {
        this.totalAmount = data().deepCopy(fields()[2].schema(), other.totalAmount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[3].schema(), other.timestamp);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'orderNo' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrderNo() {
      return orderNo;
    }

    /**
      * Sets the value of the 'orderNo' field.
      * @param value The value of 'orderNo'.
      * @return This builder.
      */
    public com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder setOrderNo(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.orderNo = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'orderNo' field has been set.
      * @return True if the 'orderNo' field has been set, false otherwise.
      */
    public boolean hasOrderNo() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'orderNo' field.
      * @return This builder.
      */
    public com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder clearOrderNo() {
      orderNo = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'enterpriseCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getEnterpriseCode() {
      return enterpriseCode;
    }

    /**
      * Sets the value of the 'enterpriseCode' field.
      * @param value The value of 'enterpriseCode'.
      * @return This builder.
      */
    public com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder setEnterpriseCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.enterpriseCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'enterpriseCode' field has been set.
      * @return True if the 'enterpriseCode' field has been set, false otherwise.
      */
    public boolean hasEnterpriseCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'enterpriseCode' field.
      * @return This builder.
      */
    public com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder clearEnterpriseCode() {
      enterpriseCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalAmount' field.
      * @return The value.
      */
    public java.lang.Double getTotalAmount() {
      return totalAmount;
    }

    /**
      * Sets the value of the 'totalAmount' field.
      * @param value The value of 'totalAmount'.
      * @return This builder.
      */
    public com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder setTotalAmount(double value) {
      validate(fields()[2], value);
      this.totalAmount = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'totalAmount' field has been set.
      * @return True if the 'totalAmount' field has been set, false otherwise.
      */
    public boolean hasTotalAmount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'totalAmount' field.
      * @return This builder.
      */
    public com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder clearTotalAmount() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder setTimestamp(long value) {
      validate(fields()[3], value);
      this.timestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.handson.ordercreationavro.dto.OrderCreatedEvent.Builder clearTimestamp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderCreatedEvent build() {
      try {
        OrderCreatedEvent record = new OrderCreatedEvent();
        record.orderNo = fieldSetFlags()[0] ? this.orderNo : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.enterpriseCode = fieldSetFlags()[1] ? this.enterpriseCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.totalAmount = fieldSetFlags()[2] ? this.totalAmount : (java.lang.Double) defaultValue(fields()[2]);
        record.timestamp = fieldSetFlags()[3] ? this.timestamp : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderCreatedEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderCreatedEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderCreatedEvent>
    READER$ = (org.apache.avro.io.DatumReader<OrderCreatedEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
